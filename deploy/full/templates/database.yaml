apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-volume-claim
  labels:
    app: tools
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.database.volumeSize }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-database
  labels:
    app: tools
    tier: database
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: tools
      tier: database
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: tools
        tier: database
    spec:
      containers:
      - name: k8s-database
        image: {{ .Values.database.image }}
        imagePullPolicy: IfNotPresent
        args:
          - --bind_ip
          - 0.0.0.0
        env:
        - name: {{ .Values.database.auth.userEnv }}
          valueFrom:
            secretKeyRef:
              name: db-auth-secret
              key: USERNAME
        - name: {{ .Values.database.auth.passEnv }}
          valueFrom:
            secretKeyRef:
              name: db-auth-secret
              key: PASSWORD
        ports:
        - name: entry
          containerPort: {{ .Values.database.port }}
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 100m
        volumeMounts:
          - name: database-persistent-storage
            mountPath: /data/db
      volumes:
      - name: database-persistent-storage
        persistentVolumeClaim:
          claimName: database-volume-claim
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---

apiVersion: v1
kind: Service
metadata:
  name: k8s-database
spec:
  ports:
  - port: {{ .Values.database.port }}
    targetPort: {{ .Values.database.port }}
  selector:
    app: tools
    tier: database
