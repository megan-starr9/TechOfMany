apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-{{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    tier: app
spec:
  replicas: {{ .Values.app.replicas }}
  revisionHistoryLimit: {{ .Values.app.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      tier: app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        tier: app
    spec:
      containers:
      - name: k8s-{{ .Release.Name }}
        image: {{ .Values.image.repository }}/{{ .Release.Name }}:{{ .Values.image.version }}
        command: ["npm", "run", "start", "-w", "site"]
        imagePullPolicy: IfNotPresent
        env:
        - name: ROOT_URL
          value: "{{ .Values.app.protocol }}://{{ .Values.app.domain }}"
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: USERNAME
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: PASSWORD
        - name: TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: session-secrets
              key: TOKEN
        ports:
        - name: entry
          containerPort: {{ .Values.app.port }}
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 100m
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---

apiVersion: v1
kind: Service
metadata:
  name: k8s-{{ .Release.Name }}
spec:
  type: NodePort
  selector:
    app: {{ .Release.Name }}
    tier: app
  ports:
  - protocol: TCP
    port: {{ .Values.app.port }}
    targetPort: entry
